---
title:  "Transitioning toward fitting age-based models"
format: html
editor: visual
---

```{r}
#| label: load-packages
#| include: false

library(tidyverse)
library(palmerpenguins)
theme_set(theme_minimal())
```

## Transitioning toward fitting age-based models

When dealing with age-based models, there are a lot of smaller pieces of information that need support for chosen parameter values or input data. Sometimes this requires some supporting statistical analyses to provide basic biological properties (e.g., growth and maturity), and sometimes this requires some data pre-processing and basic assumptions.

## Data used to fit an age-based model

Just like in surplus production models, there are two basic observation data series that are needed to fit the model based by comparing these data to model predictions. Just like in surplus production models, these are 1) catches over time and 2) population abundance indices over time. Just like in surplus production models, contrast in the data are needed to parameterize the model well and provide an informative stock assessment model. However, *unlike* in surplus production models, the sources of data are age-structured, so that catches *at age* and population abundance indices *at age* are needed. This structure provides both a challenge and an opportunity. The opportunity is that with so many time series, it is more likely that contrast will be available with which parameters can be fitted. The challenge is that this contrast must be informative, and based on age data, which must be both available for a wide enough variety of ages and of high enough quality to track the data.

Because age data are relatively expensive to collect and process, we only usually have subsets of age data, but much more length data available as samples, both from commercial catches and surveys. As a result, a method is needed to extrapolate numbers-at-age, both in catches and abundance indices, from length distributions and a sample of age readings. The tool used for extrapolation is called an **age-length key**.

## Creating age length keys

An age-length key is a simple matrix that lists probabilities of a fish observed to be a certain length actually belonging to a certain age group. For example, let's consider a population with only 3 ages and 5 length groups. Which ALK do you think is more informative?

```{r}
ALK1 <- 
  tibble(length=1:5,
         age1 = c(1, 0.5, 0.2,   0, 0),
         age2 = c(0, 0.5, 0.6, 0.5, 0),
         age3 = c(0,   0, 0.2, 0.5, 1))
ALK1 %>% mutate(total=age1+age2+age3)

```

```{r}

ALK1 %>% gather(key = age, value = p) %>% ggplot(aes(length, age)) + geom_tile(aes(fill=p))

```

```{r}
ALK2 <- 
  tibble(length=1:5,
         age1 = c(0.5, 0.2, 0.1,   0, 0),
         age2 = c(0.5, 0.6, 0.5, 0.5, 0.4),
         age3 = c(0,   0.2, 0.4, 0.5, 0.6))
ALK2 %>% mutate(total=age1+age2+age3)
```

```{r}
ALK2 %>% gather(key = age, value = p) %>% ggplot(aes(length, age)) + geom_tile(aes(fill=p))

```

In addition to time series of length distributions, ALKs are needed both from survey data and commercial data to create time series of estimates of numbers-at-age used for model fitting. Creating ALKs from data are straightforward given enough paired and length distributions. Care in sampling must be given to ensure that rare ages are sampled frequently enough to get accurate estimates of proportions.

If length-at-age is expected to differ based on different components of the population or sampling types (e.g., between gears, or between spatial areas sampled), then ALKs created from these subcomponents should be applied to length data collected within these sub-components. This substantially increases the sampling needed to cover create reliable indices but avoids bias.

## Weight-at-length relationships

Frequently, sampling and extrapolation is based on catch or survey weight measurements. In these cases, we also need to use weight-length relationships to translate a total catch into numbers at length, given the expected weight-at-length relationship. In many species, this is quite a stable relationship, so is fitted to data once and then the predictions used when needed. However, due to changes in condition over time or spatially, this assumption should be checked periodically. Here is a basic example for fitting a length-weight relationship:

```{r}
# Let's first generate some length-weight relationships. If they are unknown, they are often approximated by a simple cubic dimension  (line to volume, which is similar to line to weight):

#Weight = a*Lenghth^b, where a=1 and b=3

#Taking the log of both sides, this is:
#log(Weight) = a + b*log(Length)

set.seed(100)
a <- runif(1); b <- 3*rlnorm(1, sdlog = 0.1)
L <- 21:100 

W <- exp(a + b*log(L)) + rnorm(80,sd = exp(a + b*log(L))/5)

LxW.lm<-lm(log(W)~log(L), data = tibble(L,W))

tibble(L,W,Pred = exp(LxW.lm$fitted.values)) %>% ggplot(aes(L,W)) + geom_point() + geom_line(aes(L,Pred))

summary(LxW.lm)
```

## Length-at-age relationships

Even though growth is obviously a very important biological relationship, and body growth is an important process, it is not incorporated directly into age-based modeling, and therefore never estimated. Growth processes are implicitly included in the creation of the ALK. Therefore, by plotting and fitting for example, a Von Bertalanffy growth curve, we can gain a better understanding of our data and biological processes, even if it is not directly incorporated into the modeling framework. For example, let's consider two growth curves that look very different. They are intended to reflect growth similar to haddock versus golden redfish.

```{r}
# To fit length at age data to a Von Bertalanffy curve, we can use the nls function as we did to fit the surplus production function
# Let's first define a VonBertalanffy curve:

VonBertalanffy<-function(Linf = 100, K = 0.5, t0 = 0, Age){
    
	pred <- Linf*(1-exp(-K*(Age - t0)))

	return(pred) }

#We can then generate some data to fit

# This first example resembles haddock
Age <- rep(1:10, each = 10)

L <- VonBertalanffy(Age = Age, K = 0.5, Linf = 83, t0=0.1) + rnorm(length(age), sd = 5)

LxA.nls<-nls(Length~VonBertalanffy(Linf, K, t0, Age), data = tibble(Age, Length = L), start = c(Linf = 80, K = 0.2, t0 = 0))

summary(LxA.nls)

p_VB<- tibble(Age, Length = L, Pred = VonBertalanffy(Linf = coef(LxA.nls)[1], K = coef(LxA.nls)[2], t0=coef(LxA.nls)[3], Age)) %>% 
  ggplot(aes(Age, Length)) + geom_point() + geom_line(aes(Age, Pred))
       

```

## Catch curve analysis as a method for estimating mortality

```{r}
install.packages(boot)

PredLengthatAge<-VonBertalanffy(Linf = coef(LxA.nls)[1], K = coef(LxA.nls)[2], t0=coef(LxA.nls)[3], 1:10)
WeightatAge<-exp(coef(HxW.lm)[1]+coef(HxW.lm)[2]*log(PredLengthatAge))

MM <-abs(MM)

WeightM<-matrix(rep(c(0,WeightatAge), 100), nrow = 100, ncol = 11, byrow = T)
MatM<-matrix(rep(c(0,PredMat), 100), nrow = 100, ncol = 11, byrow = T)
plot(apply(NumbersResults*WeightM*MatM, 1, sum))

```

```{r}
	
#Last piece of age-specific information missing:
PredLengthatAge<-VonBertalanffy(Linf = coef(LxA.nls)[1], K = coef(LxA.nls)[2], t0=coef(LxA.nls)[3], 1:10)
WeightatAge<-exp(coef(HxW.lm)[1]+coef(HxW.lm)[2]*log(PredLengthatAge))

MM <-abs(MM)

WeightM<-matrix(rep(c(0,WeightatAge), 100), nrow = 100, ncol = 11, byrow = T)
MatM<-matrix(rep(c(0,PredMat), 100), nrow = 100, ncol = 11, byrow = T)
plot(apply(NumbersResults*WeightM*MatM, 1, sum))
```

### Maturation

Finally, if a stock-recruitment relationship is needed, then we need to estimate maturity-at-age ogives to create spawning stock biomass estimates. Even if stock-recruitment relationships are not used, estimates of spawning stock biomass are often used for visually assessing the stocks, or for creating reference points.

link to ICES guidelines

add L50 to age length plot

abline(h = L50)
